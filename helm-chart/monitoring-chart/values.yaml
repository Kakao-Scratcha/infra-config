# kube-prometheus-stack 설정
kube-prometheus-stack:
  enabled: true
  
  # Prometheus 설정
  prometheus:
    enabled: true
    prometheusSpec:
      retention: 30d
      storageSpec:
        volumeClaimTemplate:
          spec:
            storageClassName: csi-cinder-sc-retain
            accessModes: ["ReadWriteOnce"]
            resources:
              requests:
                storage: 20Gi
      resources:
        requests:
          memory: "1Gi"
          cpu: "500m"
        limits:
          memory: "2Gi"
          cpu: "1000m"
      nodeSelector:
        kakaoi.io/kke-nodepool: team2-api
      serviceMonitorSelectorNilUsesHelmValues: false
      podMonitorSelectorNilUsesHelmValues: false
      ruleSelectorNilUsesHelmValues: false

  # Grafana 설정
  grafana:
    enabled: true
    admin:
      existingSecret: "grafana-admin-secret"
      userKey: "admin-user"
      passwordKey: "admin-password"
    persistence:
      enabled: true
      storageClassName: csi-cinder-sc-retain
      size: 2Gi
    resources:
      requests:
        memory: "256Mi"
        cpu: "100m"
      limits:
        memory: "512Mi"
        cpu: "250m"
    nodeSelector:
      kakaoi.io/kke-nodepool: team2-api
    grafana.ini:
      server:
        root_url: "http://grafana.monitoring.svc.cluster.local:3000"
      auth.anonymous:
        enabled: true
        org_role: Admin
      security:
        allow_embedding: true
      users:
        allow_sign_up: false
      auth:
        disable_login_form: false
      feature_toggles:
        enable: "ngalert"
    datasources:
      datasources.yaml:
        apiVersion: 1
        datasources:
          - name: Prometheus
            type: prometheus
            url: http://kube-prometheus-stack-prometheus:9090
            access: proxy
            isDefault: true
          - name: Loki
            type: loki
            url: http://loki:3100
            access: proxy
            isDefault: false
    dashboardProviders:
      dashboardproviders.yaml:
        apiVersion: 1
        providers:
          - name: 'default'
            orgId: 1
            folder: ''
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/default
    dashboards:
      default:
        # 쿠버네티스 클러스터 모니터링
        kubernetes-cluster-monitoring:
          gnetId: 7249
          revision: 1
          datasource: Prometheus
        # 쿠버네티스 파드 모니터링
        kubernetes-pod-monitoring:
          gnetId: 6417
          revision: 1
          datasource: Prometheus
        # 쿠버네티스 노드 모니터링
        kubernetes-node-monitoring:
          gnetId: 1860
          revision: 27
          datasource: Prometheus
        # 쿠버네티스 네임스페이스 모니터링
        kubernetes-namespace-monitoring:
          gnetId: 16270
          revision: 1
          datasource: Prometheus
        # 쿠버네티스 워크로드 모니터링
        kubernetes-workload-monitoring:
          gnetId: 15759
          revision: 1
          datasource: Prometheus
        # Prometheus 자체 모니터링
        prometheus-monitoring:
          gnetId: 3662
          revision: 1
          datasource: Prometheus
        # AlertManager 모니터링
        alertmanager-monitoring:
          gnetId: 9578
          revision: 1
          datasource: Prometheus
        # 쿠버네티스 로그 모니터링
        kubernetes-logs:
          gnetId: 15141
          revision: 1
          datasource: Loki

  # AlertManager 설정
  alertmanager:
    enabled: true
    alertmanagerSpec:
      storage:
        volumeClaimTemplate:
          spec:
            storageClassName: csi-cinder-sc-retain
            accessModes: ["ReadWriteOnce"]
            resources:
              requests:
                storage: 1Gi
      resources:
        requests:
          memory: "256Mi"
          cpu: "100m"
        limits:
          memory: "512Mi"
          cpu: "200m"
      nodeSelector:
        kakaoi.io/kke-nodepool: team2-api

  # kube-state-metrics 설정
  kubeStateMetrics:
    enabled: true
    resources:
      requests:
        memory: "128Mi"
        cpu: "50m"
      limits:
        memory: "256Mi"
        cpu: "100m"
    nodeSelector:
      kakaoi.io/kke-nodepool: team2-api

  # node-exporter 설정
  nodeExporter:
    enabled: true
    resources:
      requests:
        memory: "128Mi"
        cpu: "50m"
      limits:
        memory: "256Mi"
        cpu: "100m"
    nodeSelector:
      kakaoi.io/kke-nodepool: team2-api

  # kubelet 설정
  kubelet:
    enabled: true
    serviceMonitor:
      interval: 30s

  # 기본 서비스 모니터링 활성화
  defaultRules:
    create: true
    rules:
      alertmanager: true
      etcd: true
      general: true
      k8s: true
      kubeApiserver: true
      kubeApiserverAvailability: true
      kubeApiserverError: true
      kubeApiserverSlos: true
      kubelet: true
      kubeProxy: true
      kubePrometheusGeneral: true
      kubePrometheusNodeRecording: true
      kubernetesApps: true
      kubernetesResources: true
      kubernetesStorage: true
      kubernetesSystem: true
      kubeScheduler: true
      kubeStateMetrics: true
      network: true
      node: true
      nodeExporterAlerting: true
      nodeExporterRecording: true
      prometheus: true
      prometheusOperator: true

  # 네임스페이스 설정
  namespaceOverride: "monitoring"
  namespace: "monitoring"

# Loki 설정
loki:
  enabled: true
  persistence:
    enabled: true
    size: 5Gi
    storageClassName: csi-cinder-sc-retain
  replicas: 1
  backend:
    replicas: 1
  write:
    replicas: 1
  resources:
    requests:
      memory: "512Mi"
      cpu: "250m"
    limits:
      memory: "1Gi"
      cpu: "500m"
  nodeSelector:
    kakaoi.io/kke-nodepool: team2-api
  service:
    type: ClusterIP
    port: 3100

# Promtail 설정 (Loki와 함께 로그 수집)
promtail:
  enabled: true
  resources:
    requests:
      memory: "128Mi"
      cpu: "100m"
    limits:
      memory: "256Mi"
      cpu: "200m"
  nodeSelector:
    kakaoi.io/kke-nodepool: team2-api