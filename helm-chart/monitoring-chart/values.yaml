# Prometheus 설정
prometheus:
  enabled: true
  server:
    persistentVolume:
      enabled: true
      size: 20Gi
      storageClass: csi-cinder-sc-retain
    resources:
      requests:
        memory: "1Gi"
        cpu: "500m"
      limits:
        memory: "2Gi"
        cpu: "1000m"
    service:
      type: ClusterIP
      port: 9090
  alertmanager:
    enabled: true
    persistentVolume:
      enabled: true
      size: 2Gi
      storageClass: csi-cinder-sc-retain
    resources:
      requests:
        memory: "256Mi"
        cpu: "100m"
      limits:
        memory: "512Mi"
        cpu: "200m"
  pushgateway:
    enabled: true
    resources:
      requests:
        memory: "128Mi"
        cpu: "50m"
      limits:
        memory: "256Mi"
        cpu: "100m"
  kubeStateMetrics:
    enabled: true
    resources:
      requests:
        memory: "128Mi"
        cpu: "50m"
      limits:
        memory: "256Mi"
        cpu: "100m"
  nodeExporter:
    enabled: true
    resources:
      requests:
        memory: "64Mi"
        cpu: "25m"
      limits:
        memory: "128Mi"
        cpu: "50m"

# Grafana 설정
grafana:
  enabled: true
  admin:
    existingSecret: "grafana-admin-secret"
    userKey: "admin-user"
    passwordKey: "admin-password"
  persistence:
    enabled: true
    size: 5Gi
    storageClass: csi-cinder-sc-retain
  resources:
    requests:
      memory: "512Mi"
      cpu: "250m"
    limits:
      memory: "1Gi"
      cpu: "500m"
  nodeSelector:
    kakaoi.io/kke-nodepool: team2-api
  service:
    type: ClusterIP
    port: 3000
  grafana.ini:
    server:
      root_url: "http://grafana.monitoring.svc.cluster.local:3000"
    auth.anonymous:
      enabled: true
      org_role: Admin
    security:
      allow_embedding: true
  datasources:
    datasources.yaml:
      apiVersion: 1
      datasources:
        - name: Prometheus
          type: prometheus
          url: http://prometheus-server:9090
          access: proxy
          isDefault: true
        - name: Loki
          type: loki
          url: http://loki:3100
          access: proxy
  dashboardProviders:
    dashboardproviders.yaml:
      apiVersion: 1
      providers:
        - name: 'default'
          orgId: 1
          folder: ''
          type: file
          disableDeletion: false
          editable: true
          options:
            path: /var/lib/grafana/dashboards/default
  dashboards:
    default:
      kubernetes-cluster-monitoring:
        gnetId: 7249
        revision: 1
        datasource: Prometheus
      kubernetes-pod-monitoring:
        gnetId: 6417
        revision: 1
        datasource: Prometheus
      kubernetes-logs:
        gnetId: 15141
        revision: 1
        datasource: Loki

# Loki 설정
loki:
  enabled: true
  persistence:
    enabled: true
    size: 10Gi
    storageClass: csi-cinder-sc-retain
  resources:
    requests:
      memory: "512Mi"
      cpu: "250m"
    limits:
      memory: "1Gi"
      cpu: "500m"
  nodeSelector:
    kakaoi.io/kke-nodepool: team2-api
  service:
    type: ClusterIP
    port: 3100
  config:
    auth_enabled: false
    server:
      http_listen_port: 3100
    ingester:
      lifecycler:
        address: 127.0.0.1
        ring:
          kvstore:
            store: inmemory
          replication_factor: 1
        final_sleep: 0s
      chunk_idle_period: 5m
      chunk_retain_period: 30s
      max_transfer_retries: 0
    schema_config:
      configs:
        - from: 2020-10-24
          store: boltdb-shipper
          object_store: filesystem
          schema: v11
          index:
            prefix: index_
            period: 24h
    storage_config:
      boltdb_shipper:
        active_index_directory: /loki/boltdb-shipper-active
        cache_location: /loki/boltdb-shipper-cache
        cache_ttl: 24h
        shared_store: filesystem
      filesystem:
        directory: /loki/chunks
    limits_config:
      enforce_metric_name: false
      reject_old_samples: true
      reject_old_samples_max_age: 168h
      max_cache_freshness_per_query: 10m
      split_queries_by_interval: 15m
      max_query_parallelism: 32
      max_query_series: 100000
      max_query_lookback: 0s
      max_entries_limit_per_query: 5000
      max_query_length: 721h
      max_streams_per_user: 10000
      max_line_size: 256000
      max_label_name_length: 1024
      max_label_value_length: 4096
      max_label_names_per_series: 30
      max_global_streams_per_user: 10000
      ingestion_rate_mb: 16
      ingestion_burst_size_mb: 32
      per_stream_rate_limit: 3MB
      per_stream_rate_limit_burst: 15MB
      max_streams_matchers_per_query: 1000
      max_concurrent_tail_requests: 10

# Promtail 설정
promtail:
  enabled: true
  resources:
    requests:
      memory: "128Mi"
      cpu: "100m"
    limits:
      memory: "256Mi"
      cpu: "200m"
  nodeSelector:
    kakaoi.io/kke-nodepool: team2-api
  config:
    clients:
      - url: http://loki:3100/loki/api/v1/push
    scrape_configs:
      - job_name: kubernetes-pods
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_controller_name]
            regex: ([0-9a-z-.]+?)(-[0-9a-f]{8,10})?
            action: replace
            target_label: __tmp_controller_name
          - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_name, __meta_kubernetes_pod_label_app, __tmp_controller_name, __meta_kubernetes_pod_name]
            regex: ^;*([^;]+)(;.*)?$
            action: replace
            target_label: app
          - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_instance, __meta_kubernetes_pod_label_instance]
            regex: ^;*([^;]+)(;.*)?$
            action: replace
            target_label: instance
          - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_component, __meta_kubernetes_pod_label_component]
            regex: ^;*([^;]+)(;.*)?$
            action: replace
            target_label: component
          - action: replace
            source_labels: [__meta_kubernetes_pod_node_name]
            target_label: node_name
          - action: replace
            source_labels: [__meta_kubernetes_namespace]
            target_label: namespace
          - action: replace
            source_labels: [__meta_kubernetes_pod_name]
            target_label: pod
          - action: replace
            source_labels: [__meta_kubernetes_pod_container_name]
            target_label: container
          - action: replace
            replacement: /var/log/pods/*$1/*.log
            separator: /
            source_labels: [__meta_kubernetes_pod_uid, __meta_kubernetes_pod_container_name]
            target_label: __path__
          - action: replace
            regex: true/(.*)
            replacement: /var/log/pods/*$1/*.log
            separator: /
            source_labels: [__meta_kubernetes_pod_annotationpresent_kubernetes_io_config_hash, __meta_kubernetes_pod_annotation_kubernetes_io_config_hash, __meta_kubernetes_pod_container_name]
            target_label: __path__
        pipeline_stages:
          - cri: {}

# AlertManager 설정
alertmanager:
  enabled: true
  persistentVolume:
    enabled: true
    size: 2Gi
    storageClass: csi-cinder-sc-retain
  resources:
    requests:
      memory: "256Mi"
      cpu: "100m"
    limits:
      memory: "512Mi"
      cpu: "200m"
  nodeSelector:
    kakaoi.io/kke-nodepool: team2-api
  service:
    type: ClusterIP
    port: 9093
  config:
    global:
      smtp_smarthost: 'localhost:587'
      smtp_from: 'alertmanager@example.com'
      smtp_auth_username: 'smtp_username'
      smtp_auth_password: 'smtp_password'
      smtp_require_tls: true
    smtp_auth_secret: 'alertmanager-smtp-secret'
    route:
      group_by: ['alertname']
      group_wait: 10s
      group_interval: 10s
      repeat_interval: 1h
      receiver: 'web.hook'
    receivers:
      - name: 'web.hook'
        webhook_configs:
          - url: 'http://127.0.0.1:5001/'
