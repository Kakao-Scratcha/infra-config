# Prometheus 설정
prometheus:
  enabled: true
  server:
    persistentVolume:
      enabled: true
      size: 20Gi
      storageClass: csi-cinder-sc-retain
    resources:
      requests:
        memory: "1Gi"
        cpu: "500m"
      limits:
        memory: "2Gi"
        cpu: "1000m"
    service:
      type: ClusterIP
      port: 9090
  alertmanager:
    enabled: true
    persistentVolume:
      enabled: true
      size: 2Gi
      storageClass: csi-cinder-sc-retain
    resources:
      requests:
        memory: "256Mi"
        cpu: "100m"
      limits:
        memory: "512Mi"
        cpu: "200m"
  pushgateway:
    enabled: true
    resources:
      requests:
        memory: "128Mi"
        cpu: "50m"
      limits:
        memory: "256Mi"
        cpu: "100m"
  kubeStateMetrics:
    enabled: true
    resources:
      requests:
        memory: "128Mi"
        cpu: "50m"
      limits:
        memory: "256Mi"
        cpu: "100m"
  nodeExporter:
    enabled: true
    resources:
      requests:
        memory: "64Mi"
        cpu: "25m"
      limits:
        memory: "128Mi"
        cpu: "50m"

# Grafana 설정
grafana:
  enabled: true
  admin:
    existingSecret: "grafana-admin-secret"
    userKey: "admin-user"
    passwordKey: "admin-password"
  persistence:
    enabled: true
    size: 2Gi
    storageClassName: csi-cinder-sc-retain
  resources:
    requests:
      memory: "256Mi"
      cpu: "100m"
    limits:
      memory: "512Mi"
      cpu: "250m"
  nodeSelector:
    kakaoi.io/kke-nodepool: team2-api
  service:
    type: ClusterIP
    port: 3000
  grafana.ini:
    server:
      root_url: "http://grafana.monitoring.svc.cluster.local:3000"
    auth.anonymous:
      enabled: true
      org_role: Admin
    security:
      allow_embedding: true
  datasources:
    datasources.yaml:
      apiVersion: 1
      datasources:
        - name: Prometheus
          type: prometheus
          url: http://prometheus-server:9090
          access: proxy
          isDefault: true
        - name: Loki
          type: loki
          url: http://loki:3100
          access: proxy
  dashboardProviders:
    dashboardproviders.yaml:
      apiVersion: 1
      providers:
        - name: 'default'
          orgId: 1
          folder: ''
          type: file
          disableDeletion: false
          editable: true
          options:
            path: /var/lib/grafana/dashboards/default
  dashboards:
    default:
      kubernetes-cluster-monitoring:
        gnetId: 7249
        revision: 1
        datasource: Prometheus
      kubernetes-pod-monitoring:
        gnetId: 6417
        revision: 1
        datasource: Prometheus
      kubernetes-logs:
        gnetId: 15141
        revision: 1
        datasource: Loki

# Loki 설정
loki:
  enabled: true
  persistence:
    enabled: true
    size: 5Gi
    storageClassName: csi-cinder-sc-retain
  replicas: 1
  backend:
    replicas: 1
  write:
    replicas: 1
  resources:
    requests:
      memory: "512Mi"
      cpu: "250m"
    limits:
      memory: "1Gi"
      cpu: "500m"
  nodeSelector:
    kakaoi.io/kke-nodepool: team2-api
  service:
    type: ClusterIP
    port: 3100
  # Loki는 기본 설정을 사용합니다
  # 필요시 별도로 설정을 오버라이드할 수 있습니다

# Promtail 설정
promtail:
  enabled: true
  resources:
    requests:
      memory: "128Mi"
      cpu: "100m"
    limits:
      memory: "256Mi"
      cpu: "200m"
  nodeSelector:
    kakaoi.io/kke-nodepool: team2-api


# AlertManager 설정
alertmanager:
  enabled: true
  persistentVolume:
    enabled: true
    size: 1Gi
    storageClass: csi-cinder-sc-retain
  resources:
    requests:
      memory: "256Mi"
      cpu: "100m"
    limits:
      memory: "512Mi"
      cpu: "200m"
  nodeSelector:
    kakaoi.io/kke-nodepool: team2-api
  service:
    type: ClusterIP
    port: 9093

